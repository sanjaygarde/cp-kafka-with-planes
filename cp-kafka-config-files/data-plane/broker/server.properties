# Maintained by Ansible
advertised.listeners=INTERNAL://172.31.15.107:9092,BROKER://172.31.15.107:9091
authorizer.class.name=io.confluent.kafka.security.authorizer.ConfluentServerAuthorizer
broker.id=1
confluent.ansible.managed=true
confluent.authorizer.access.rule.providers=CONFLUENT,ZK_ACL
confluent.balancer.topic.replication.factor=3
confluent.http.server.advertised.listeners=http://172.31.15.107:8090
confluent.http.server.listeners=http://0.0.0.0:8090
confluent.license.topic=_confluent-command
confluent.license.topic.replication.factor=3
confluent.metadata.bootstrap.servers=172.31.5.171:9091,172.31.12.47:9091,172.31.11.37:9091
confluent.metadata.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";
confluent.metadata.sasl.mechanism=PLAIN
confluent.metadata.security.protocol=SASL_PLAINTEXT
confluent.metadata.topic.replication.factor=3
confluent.metrics.reporter.bootstrap.servers=172.31.5.171:9091,172.31.12.47:9091,172.31.11.37:9091
confluent.metrics.reporter.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";
confluent.metrics.reporter.sasl.mechanism=PLAIN
confluent.metrics.reporter.security.protocol=SASL_PLAINTEXT
confluent.security.event.logger.exporter.kafka.topic.replicas=3
confluent.support.customer.id=anonymous
confluent.support.metrics.enable=true
group.initial.rebalance.delay.ms=3000
inter.broker.listener.name=BROKER
kafka.rest.bootstrap.servers=172.31.15.107:9092,172.31.1.230:9092,172.31.8.1:9092
kafka.rest.client.security.protocol=SASL_PLAINTEXT
kafka.rest.confluent.metadata.basic.auth.user.info=kafka-broker:kb-secret
kafka.rest.confluent.metadata.bootstrap.server.urls=http://172.31.5.171:8090,http://172.31.12.47:8090,http://172.31.11.37:8090
kafka.rest.confluent.metadata.http.auth.credentials.provider=BASIC
kafka.rest.enable=true
kafka.rest.kafka.rest.resource.extension.class=io.confluent.kafkarest.security.KafkaRestSecurityResourceExtension
kafka.rest.public.key.path=/var/ssl/private/public.pem
kafka.rest.rest.servlet.initializor.classes=io.confluent.common.security.jetty.initializer.InstallBearerOrBasicSecurityHandler
listener.name.broker.plain.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret"  user_admin="admin-secret" user_client="client-secret";
listener.name.broker.sasl.enabled.mechanisms=PLAIN
listener.name.internal.oauthbearer.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required publicKeyPath="/var/ssl/private/public.pem";
listener.name.internal.oauthbearer.sasl.login.callback.handler.class=io.confluent.kafka.server.plugins.auth.token.TokenBearerServerLoginCallbackHandler
listener.name.internal.oauthbearer.sasl.server.callback.handler.class=io.confluent.kafka.server.plugins.auth.token.TokenBearerValidatorCallbackHandler
listener.name.internal.sasl.enabled.mechanisms=OAUTHBEARER
listener.security.protocol.map=INTERNAL:SASL_PLAINTEXT,BROKER:SASL_PLAINTEXT
listeners=INTERNAL://:9092,BROKER://:9091
log.dirs=/var/lib/kafka/data
log.retention.check.interval.ms=300000
log.retention.hours=168
log.segment.bytes=1073741824
metric.reporters=io.confluent.metrics.reporter.ConfluentMetricsReporter
num.io.threads=16
num.network.threads=8
num.partitions=1
num.recovery.threads.per.data.dir=2
offsets.topic.replication.factor=3
sasl.enabled.mechanisms=OAUTHBEARER,PLAIN
sasl.mechanism.inter.broker.protocol=PLAIN
socket.receive.buffer.bytes=102400
socket.request.max.bytes=104857600
socket.send.buffer.bytes=102400
super.users=User:mds;User:admin
transaction.state.log.min.isr=2
transaction.state.log.replication.factor=3
zookeeper.connect=172.31.4.134:2181,172.31.3.101:2181,172.31.9.48:2181
zookeeper.connection.timeout.ms=18000
